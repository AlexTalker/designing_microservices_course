plugins {
/*    id 'java' */
    id 'com.google.protobuf' version '0.8.8'
/*    id "com.jfrog.artifactory" version "4.9.8" */
}

repositories {
    maven {
        url "http://artifactory:8081/artifactory/repo" // The Artifactory (preferably virtual) repository to resolve from
        credentials {               // Optional resolver credentials (leave out to use anonymous resolution)
            username = "admin" // Artifactory user name
            password = "password" // Password or API Key
        }
    }

    // mavenCentral()
}

group = 'com.microservices.laundrymanagement'
version = apiVersion

jar {
    archiveBaseName = "laundrymanagement-api"
}

dependencies {
    compile 'com.google.protobuf:protobuf-java:3.8.0'
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src"
    protoc {
        artifact = 'com.google.protobuf:protoc:3.8.0'
    }
}

sourceSets {
    main {
        proto {
            srcDir "$projectDir/src/main/java/com/microservices/laundrymanagement/api/schema"
            include '**/*.proto'
        }
    }
}

uploadArchives {
    repositories {
        mavenLocal()
    }
}

/* publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
*/
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId "${project.name}"
            groupId = group
            version = project.version
            from components.java
        }
    }
}

artifactory {
    contextUrl = "http://artifactory:8081/artifactory"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'artifacts'
            username = "admin"
            password = "password"
            maven = true
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
        }
    }
    resolve {
        repository {
            repoKey = 'repo'
            username = "admin"
            password = "password"
            maven = true
            
        }
    }
}